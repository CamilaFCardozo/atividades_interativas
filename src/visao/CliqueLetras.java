/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package visao;

import java.io.File;
import java.sql.SQLException;
import java.util.Random;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JInternalFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import modeloConection.ConexaoBD;

public class CliqueLetras extends JInternalFrame {

    ConexaoBD conex = new ConexaoBD();
    private static File dir1 = new File(".");
    public static String caminho = "";
   
    private static int pontos;
    private static int erros;
    private static String nivel;
    private static Vector<String> Arquivos = new Vector();
    Random rnd = new Random();
    private static File diretorio;
    private int contImagem = 0;
    private String[] alfabeto = {"A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "�", "�", "�", "�", "�", "�", "�", "�", "�", "�"};
    private int length;

    public CliqueLetras(String nivel){
    initComponents();
    this.jlPalavraCorreta.setVisible(false);
    nivel = nivel;
    this.jlPontos.setText("0");
    this.jlErros.setText("0");
    pontos = 0;
    erros = 0;
    try
    {
      diretorio = new File(jfPrincipal.caminho + "\\imagens\\" + nivel + "\\");
      File[] arquivos = diretorio.listFiles();
      for (int arq = 0; arq < arquivos.length; arq++) {
        Arquivos.addElement(arquivos[arq].toString());
      }
      this.jlPalavraCorreta.setText(pegarPalavra((String)Arquivos.get(0)));
      this.jlImagem.setIcon(new ImageIcon((String)Arquivos.get(0)));
      limparLetras();
      sortearLetras();
      
      this.jlQtdeLetras.setText("Esta palavra tem " + this.jlPalavraCorreta.getText().length() + " letras.");
    }
    catch (Exception erro)
    {
      JOptionPane.showMessageDialog(this, "Erro ao carregar imagens: " + erro.getMessage());
      dispose();
    }
  
  }

    CliqueLetras() {
        initComponents();
        //Aqui trago o numero do aluno com O System.getProperty() e apresento na jlId.
        String usuario = System.getProperty("login", "");
        jlId.setText(usuario);
        conex.conexao();
        conex.executaSql("select * from alunos where cod_acesso='" + usuario + "'");
        try {
            conex.rs.first();
            jlNome.setText(conex.rs.getString("nome"));
            JOptionPane.showMessageDialog(this,jlPalavraCorreta);

        } catch (SQLException ex) {
            Logger.getLogger(MenuAtividades.class.getName()).log(Level.SEVERE, null, ex);
        }
        conex.desconecta();

        jlImagem = new JLabel();
        jlPalavra = new JLabel();
        jlLetra = new JButton();
        jlPalavraCorreta = new JLabel();
        String palavracorreta = "";
        jlPalavraCorreta.setText(String.valueOf(palavracorreta));
        //  this.jLabel1 = new JLabel();
        jlErros = new JLabel();
        jbAvancar = new JButton();
        jlQtdeLetras = new JLabel();
        //this.jLabel2 = new JLabel();
        jlPontos = new JLabel();

        jlLetra1 = new JButton();
        jlLetra2 = new JButton();
        jlLetra3 = new JButton();
        jlLetra4 = new JButton();
        jlLetra5 = new JButton();
        jlLetra6 = new JButton();
        jlLetra7 = new JButton();
        jlLetra8 = new JButton();
        jlLetra9 = new JButton();
        jlLetra10 = new JButton();
        jlLetra11 = new JButton();
        jlLetra12 = new JButton();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jlImagem = new javax.swing.JLabel();
        jlPalavra = new javax.swing.JLabel();
        jbAvancar = new javax.swing.JButton();
        jlErros = new javax.swing.JLabel();
        jlPontos = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jlPalavraCorreta = new javax.swing.JLabel();
        jlQtdeLetras = new javax.swing.JLabel();
        jlLetra1 = new javax.swing.JButton();
        jlLetra2 = new javax.swing.JButton();
        jlLetra4 = new javax.swing.JButton();
        jlLetra6 = new javax.swing.JButton();
        jlLetra5 = new javax.swing.JButton();
        jlLetra3 = new javax.swing.JButton();
        jlLetra7 = new javax.swing.JButton();
        jlLetra10 = new javax.swing.JButton();
        jlLetra8 = new javax.swing.JButton();
        jlLetra9 = new javax.swing.JButton();
        jlLetra11 = new javax.swing.JButton();
        jlLetra12 = new javax.swing.JButton();
        jlLetra = new javax.swing.JButton();
        jlHora = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jlId = new javax.swing.JLabel();
        jlNome = new javax.swing.JLabel();
        jlFundoTela = new javax.swing.JLabel();

        getContentPane().setLayout(null);

        jlImagem.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlImagem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/nivel1/AVÓ.jpg"))); // NOI18N
        jlImagem.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        getContentPane().add(jlImagem);
        jlImagem.setBounds(30, 110, 240, 230);

        jlPalavra.setFont(new java.awt.Font("Comic Sans MS", 1, 36)); // NOI18N
        jlPalavra.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlPalavra.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        getContentPane().add(jlPalavra);
        jlPalavra.setBounds(290, 110, 370, 80);

        jbAvancar.setBackground(new java.awt.Color(0, 255, 0));
        jbAvancar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jbAvancar.setText("AVANÇAR");
        jbAvancar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAvancarActionPerformed(evt);
            }
        });
        getContentPane().add(jbAvancar);
        jbAvancar.setBounds(290, 200, 170, 50);

        jlErros.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jlErros.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlErros.setText("0");
        getContentPane().add(jlErros);
        jlErros.setBounds(610, 430, 85, 63);

        jlPontos.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jlPontos.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlPontos.setText("0");
        getContentPane().add(jlPontos);
        jlPontos.setBounds(610, 360, 85, 63);

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/CORRETO.png"))); // NOI18N
        getContentPane().add(jLabel3);
        jLabel3.setBounds(540, 360, 59, 63);

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/ERRADO.png"))); // NOI18N
        getContentPane().add(jLabel4);
        jLabel4.setBounds(540, 430, 59, 63);

        jlPalavraCorreta.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        jlPalavraCorreta.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        getContentPane().add(jlPalavraCorreta);
        jlPalavraCorreta.setBounds(290, 260, 367, 40);

        jlQtdeLetras.setFont(new java.awt.Font("Comic Sans MS", 1, 16)); // NOI18N
        jlQtdeLetras.setForeground(new java.awt.Color(153, 0, 0));
        jlQtdeLetras.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        getContentPane().add(jlQtdeLetras);
        jlQtdeLetras.setBounds(290, 310, 370, 30);

        jlLetra1.setBackground(new java.awt.Color(204, 204, 204));
        jlLetra1.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        jlLetra1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jlLetra1ActionPerformed(evt);
            }
        });
        getContentPane().add(jlLetra1);
        jlLetra1.setBounds(30, 370, 70, 70);

        jlLetra2.setBackground(new java.awt.Color(204, 204, 204));
        jlLetra2.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        jlLetra2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jlLetra2ActionPerformed(evt);
            }
        });
        getContentPane().add(jlLetra2);
        jlLetra2.setBounds(110, 370, 70, 70);

        jlLetra4.setBackground(new java.awt.Color(204, 204, 204));
        jlLetra4.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        jlLetra4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jlLetra4ActionPerformed(evt);
            }
        });
        getContentPane().add(jlLetra4);
        jlLetra4.setBounds(270, 370, 70, 70);

        jlLetra6.setBackground(new java.awt.Color(204, 204, 204));
        jlLetra6.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        jlLetra6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jlLetra6ActionPerformed(evt);
            }
        });
        getContentPane().add(jlLetra6);
        jlLetra6.setBounds(430, 370, 70, 70);

        jlLetra5.setBackground(new java.awt.Color(204, 204, 204));
        jlLetra5.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        jlLetra5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jlLetra5ActionPerformed(evt);
            }
        });
        getContentPane().add(jlLetra5);
        jlLetra5.setBounds(350, 370, 70, 70);

        jlLetra3.setBackground(new java.awt.Color(204, 204, 204));
        jlLetra3.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        jlLetra3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jlLetra3ActionPerformed(evt);
            }
        });
        getContentPane().add(jlLetra3);
        jlLetra3.setBounds(190, 370, 70, 70);

        jlLetra7.setBackground(new java.awt.Color(204, 204, 204));
        jlLetra7.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        jlLetra7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jlLetra7ActionPerformed(evt);
            }
        });
        getContentPane().add(jlLetra7);
        jlLetra7.setBounds(30, 450, 70, 70);

        jlLetra10.setBackground(new java.awt.Color(204, 204, 204));
        jlLetra10.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        jlLetra10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jlLetra10ActionPerformed(evt);
            }
        });
        getContentPane().add(jlLetra10);
        jlLetra10.setBounds(270, 450, 70, 70);

        jlLetra8.setBackground(new java.awt.Color(204, 204, 204));
        jlLetra8.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        jlLetra8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jlLetra8ActionPerformed(evt);
            }
        });
        getContentPane().add(jlLetra8);
        jlLetra8.setBounds(110, 450, 70, 70);

        jlLetra9.setBackground(new java.awt.Color(204, 204, 204));
        jlLetra9.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        jlLetra9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jlLetra9ActionPerformed(evt);
            }
        });
        getContentPane().add(jlLetra9);
        jlLetra9.setBounds(190, 450, 70, 70);

        jlLetra11.setBackground(new java.awt.Color(204, 204, 204));
        jlLetra11.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        jlLetra11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jlLetra11ActionPerformed(evt);
            }
        });
        getContentPane().add(jlLetra11);
        jlLetra11.setBounds(350, 450, 70, 70);

        jlLetra12.setBackground(new java.awt.Color(204, 204, 204));
        jlLetra12.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        jlLetra12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jlLetra12ActionPerformed(evt);
            }
        });
        getContentPane().add(jlLetra12);
        jlLetra12.setBounds(430, 450, 70, 70);

        jlLetra.setBackground(new java.awt.Color(255, 153, 153));
        jlLetra.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jlLetra.setText("APAGAR");
        jlLetra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jlLetraActionPerformed(evt);
            }
        });
        getContentPane().add(jlLetra);
        jlLetra.setBounds(490, 200, 170, 50);
        getContentPane().add(jlHora);
        jlHora.setBounds(570, 440, 120, 30);

        jLabel1.setFont(new java.awt.Font("Comic Sans MS", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(153, 0, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Clique nas letras");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(230, 40, 320, 50);

        jlId.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        jlId.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        getContentPane().add(jlId);
        jlId.setBounds(14, 10, 50, 30);

        jlNome.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        getContentPane().add(jlNome);
        jlNome.setBounds(80, 10, 330, 30);

        jlFundoTela.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/fundodetela.jpg"))); // NOI18N
        getContentPane().add(jlFundoTela);
        jlFundoTela.setBounds(0, -20, 720, 570);

        setBounds(0, 0, 734, 575);
    }// </editor-fold>//GEN-END:initComponents

    private void jbAvancarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAvancarActionPerformed
        try
    {
      if (!this.jlPalavra.getText().equals("")) {
        if (this.jlPalavra.getText().equals(this.jlPalavraCorreta.getText()))
        {
          pontos += 1;
          this.jlPontos.setText("" + pontos);
          
          this.contImagem += 1;
          if (this.contImagem < Arquivos.size())
          {
            this.jlPalavraCorreta.setText(pegarPalavra((String)Arquivos.get(this.contImagem)));
            if (this.jlPalavraCorreta.getText().equalsIgnoreCase("thumbs"))
            {
              this.contImagem += 1;
              if (this.contImagem < Arquivos.size())
              {
                this.jlPalavraCorreta.setText(pegarPalavra((String)Arquivos.get(this.contImagem)));
              }
              else
              {
                JOptionPane.showMessageDialog(this, "Parab�ns, voc� terminou este n�vel com " + this.jlPontos.getText() + " acertos e " + this.jlErros.getText() + " erros ! \nPasse para o pr�ximo");
                dispose();
              }
            }
            this.jlImagem.setIcon(new ImageIcon((String)Arquivos.get(this.contImagem)));
            this.jlPalavra.setText("");
            limparLetras();
            sortearLetras();
            
            this.jlQtdeLetras.setText("Esta palavra tem " + this.jlPalavraCorreta.getText().length() + " letras.");
          }
          else
          {
            JOptionPane.showMessageDialog(this, "Parab�ns, voc� terminou este n�vel com " + this.jlPontos.getText() + " acertos e " + this.jlErros.getText() + " erros ! \nPasse para o pr�ximo");
            dispose();
          }
        }
        else
        {
          JOptionPane.showMessageDialog(this, "Tente novamente !", "Erro", 0);
          jlPalavra.getText().equals(this.jlPalavraCorreta.getText());
          erros += 1;
          this.jlErros.setText("" + erros);
        }
      }
    }
    catch (Exception erro)
    {
      JOptionPane.showMessageDialog(this, "Erro ao avan�ar: " + erro.getMessage());
    }

    }//GEN-LAST:event_jbAvancarActionPerformed

    private void jlLetra1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jlLetra1ActionPerformed
     jlPalavra.setText(jlPalavra.getText() + jlLetra1.getText());
    }//GEN-LAST:event_jlLetra1ActionPerformed

    private void jlLetra2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jlLetra2ActionPerformed
       jlPalavra.setText(this.jlPalavra.getText() + this.jlLetra2.getText());
    }//GEN-LAST:event_jlLetra2ActionPerformed

    private void jlLetra4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jlLetra4ActionPerformed
      jlPalavra.setText(jlPalavra.getText() + jlLetra3.getText());
    }//GEN-LAST:event_jlLetra4ActionPerformed

    private void jlLetra6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jlLetra6ActionPerformed
    jlPalavra.setText(jlPalavra.getText() + jlLetra4.getText());
    }//GEN-LAST:event_jlLetra6ActionPerformed

    private void jlLetra5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jlLetra5ActionPerformed
    jlPalavra.setText(jlPalavra.getText() + jlLetra5.getText());
    }//GEN-LAST:event_jlLetra5ActionPerformed

    private void jlLetra3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jlLetra3ActionPerformed
    jlPalavra.setText(jlPalavra.getText() + jlLetra6.getText()); 
    }//GEN-LAST:event_jlLetra3ActionPerformed

    private void jlLetra7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jlLetra7ActionPerformed
    jlPalavra.setText(jlPalavra.getText() + jlLetra7.getText());
    }//GEN-LAST:event_jlLetra7ActionPerformed

    private void jlLetra10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jlLetra10ActionPerformed
    jlPalavra.setText(jlPalavra.getText() + jlLetra8.getText());
    }//GEN-LAST:event_jlLetra10ActionPerformed

    private void jlLetra8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jlLetra8ActionPerformed
    jlPalavra.setText(jlPalavra.getText() + jlLetra9.getText());
    }//GEN-LAST:event_jlLetra8ActionPerformed

    private void jlLetra9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jlLetra9ActionPerformed
    jlPalavra.setText(jlPalavra.getText() + jlLetra10.getText());
    }//GEN-LAST:event_jlLetra9ActionPerformed

    private void jlLetra11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jlLetra11ActionPerformed
    jlPalavra.setText(jlPalavra.getText() + jlLetra11.getText());
    }//GEN-LAST:event_jlLetra11ActionPerformed

    private void jlLetra12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jlLetra12ActionPerformed
    jlPalavra.setText(jlPalavra.getText() + jlLetra12.getText());
    }//GEN-LAST:event_jlLetra12ActionPerformed

    private void jlLetraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jlLetraActionPerformed
        jlPalavra.setText(jlPalavra.getText().substring(0, (jlPalavra.getText().length() - 1)));
    }//GEN-LAST:event_jlLetraActionPerformed
   
    public static String pegarPalavra(String arquivo) throws Exception {
        String arquivo2[] = arquivo.split("\\\\");
        String nomeArquivo[] = arquivo2[arquivo2.length - 1].split("\\.");
        System.out.println(nomeArquivo[0]);
        return nomeArquivo[0];
    }

    public final void sortearLetras() {
        int numero = 0;
        int local = 0;
        int contLetrasColocadas = 0, contLetrasIguais = 0, contLetrasDiferentes = 0;
        String letras[] = new String[12];

        //     do{
        //separar as letras diferentes retirando as repetições
        boolean validaLetraIgual = false;
        for (int i = 0; i < jlPalavraCorreta.getText().length(); i++) {
            validaLetraIgual = false;
            for (int posicao = 0; posicao < contLetrasDiferentes; posicao++) {
                if (letras[posicao].equals(jlPalavraCorreta.getText().substring(i, i + 1))) {
                    validaLetraIgual = true;
                    contLetrasIguais++;
                    break;
                }
            }
            if (validaLetraIgual == false) {
                letras[contLetrasDiferentes] = jlPalavraCorreta.getText().substring(i, i + 1);
                contLetrasDiferentes++;
            }
        }

        //colocar mais letras para preencher os 12 espaços
        do {

            numero = rnd.nextInt(alfabeto.length);
            String letraSorteada = alfabeto[numero];
            validaLetraIgual = false;
            for (int i = 0; i < contLetrasDiferentes; i++) {
                if (letras[i].equals(letraSorteada)) {
                    numero = rnd.nextInt(jlPalavraCorreta.getText().length());
                    letraSorteada = jlPalavraCorreta.getText().substring(numero, numero + 1);
                    i = 0;
                    validaLetraIgual = true;
                    break;
                }
            }
            if (!validaLetraIgual) {
                letras[contLetrasDiferentes] = letraSorteada;
                contLetrasDiferentes++;
            }
        } while (contLetrasDiferentes < 12);

        //colocar as letras já separadas e diferentes em locais aleatórios
        boolean localVazio;
        //for(int i=0;i<contLetrasDiferentes;i++) {

        for (int i = 0; i < 12; i++) {

            do { //verificar o local a ser colocada a letra
                localVazio = true;
                local = rnd.nextInt(13);
                if (jlLetra1.getText().equals("") && local == 1) {
                    jlLetra1.setText(letras[i]);
                } else if (jlLetra2.getText().equals("") && local == 2) {
                    jlLetra2.setText(letras[i]);
                } else if (jlLetra4.getText().equals("") && local == 3) {
                    jlLetra4.setText(letras[i]);
                } else if (jlLetra6.getText().equals("") && local == 4) {
                    jlLetra6.setText(letras[i]);
                } else if (jlLetra5.getText().equals("") && local == 5) {
                    jlLetra5.setText(letras[i]);
                } else if (jlLetra3.getText().equals("") && local == 6) {
                    jlLetra3.setText(letras[i]);
                } else if (jlLetra7.getText().equals("") && local == 7) {
                    jlLetra7.setText(letras[i]);
                } else if (jlLetra8.getText().equals("") && local == 8) {
                    jlLetra8.setText(letras[i]);
                } else if (jlLetra9.getText().equals("") && local == 9) {
                    jlLetra9.setText(letras[i]);
                } else if (jlLetra10.getText().equals("") && local == 10) {
                    jlLetra10.setText(letras[i]);
                } else if (jlLetra11.getText().equals("") && local == 11) {
                    jlLetra11.setText(letras[i]);
                } else if (jlLetra12.getText().equals("") && local == 12) {
                    jlLetra12.setText(letras[i]);
                } else {
                    localVazio = false;
                }
            } while (!localVazio);

        }
    }

    private void limparLetras() {
        jlLetra1.setText("");
        jlLetra2.setText("");
        jlLetra4.setText("");
        jlLetra6.setText("");
        jlLetra5.setText("");
        jlLetra3.setText("");
        jlLetra7.setText("");
        jlLetra8.setText("");
        jlLetra9.setText("");
        jlLetra10.setText("");
        jlLetra11.setText("");
        jlLetra12.setText("");

// jlPalavra.setText(jlPalavraCorreta.getText(alfabeto.length));
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CliqueLetras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }


        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CliqueLetras().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JButton jbAvancar;
    private javax.swing.JLabel jlErros;
    private javax.swing.JLabel jlFundoTela;
    private javax.swing.JLabel jlHora;
    private javax.swing.JLabel jlId;
    private javax.swing.JLabel jlImagem;
    private javax.swing.JButton jlLetra;
    private javax.swing.JButton jlLetra1;
    private javax.swing.JButton jlLetra10;
    private javax.swing.JButton jlLetra11;
    private javax.swing.JButton jlLetra12;
    private javax.swing.JButton jlLetra2;
    private javax.swing.JButton jlLetra3;
    private javax.swing.JButton jlLetra4;
    private javax.swing.JButton jlLetra5;
    private javax.swing.JButton jlLetra6;
    private javax.swing.JButton jlLetra7;
    private javax.swing.JButton jlLetra8;
    private javax.swing.JButton jlLetra9;
    private javax.swing.JLabel jlNome;
    private javax.swing.JLabel jlPalavra;
    private javax.swing.JLabel jlPalavraCorreta;
    private javax.swing.JLabel jlPontos;
    private javax.swing.JLabel jlQtdeLetras;
    // End of variables declaration//GEN-END:variables

}
